#!/bin/bash
# Tool Configuration File
# Define tools to run, their commands, and expected results

# Tutorial configuration
TUTORIAL_NAME="Code Quality and Security Tools"
VENV_NAME="venv"
REQUIREMENTS_FILE="requirements.txt"
OUTPUT_DIR="analysis_output"

# Create output directory if it doesn't exist
mkdir -p "$OUTPUT_DIR"


#  ðŸ§  Different Tool Categories:
#  - Analyzers (bandit, flake8, mypy): Count issues, use thresholds
#  - Formatters (black, isort): Exit code based, count files to fix
#  - Test Runners (pytest): Count passed/failed tests

# Tool definitions
# Format: "tool_name|command|input_files|expected_issues|description"
TOOLS=(
    "bandit|bandit -r examples/ -f json -o $OUTPUT_DIR/bandit_report.json|examples/|10|Security vulnerability scanner"
    "flake8|flake8 examples/ --output-file=$OUTPUT_DIR/flake8_report.txt|examples/|15|PEP8 style checker"
    "black|black --check --diff examples/|examples/|0|Code formatter (check mode)"
    "mypy|mypy examples/ --ignore-missing-imports|examples/|8|Static type checker"
    "isort|isort --check-only --diff examples/|examples/|0|Import sorter (check mode)"
    "pytest|pytest tests/ -v --tb=short|tests/|0|Unit test runner"
)

# Tool-specific configurations
BANDIT_CONFIG="config/bandit.yaml"
FLAKE8_CONFIG="setup.cfg"
BLACK_CONFIG="pyproject.toml"
MYPY_CONFIG="mypy.ini"
ISORT_CONFIG="setup.cfg"
PYTEST_CONFIG="pytest.ini"

# Report settings
GENERATE_REPORT=true
REPORT_FORMAT="markdown"  # markdown, json, xml
REPORT_FILE="$OUTPUT_DIR/code_quality_report.md"

# Fix mode settings
AUTO_FIX_ENABLED=false
BACKUP_BEFORE_FIX=true
BACKUP_DIR="backups"

# Analysis settings
STRICT_MODE=false  # Fail on any issues
SHOW_PROGRESS=true
VERBOSE_OUTPUT=false
PARALLEL_EXECUTION=false

# File patterns
PYTHON_FILES="*.py"
TEST_FILES="test_*.py *_test.py"
EXCLUDE_PATTERNS="__pycache__ .git .tox build dist *.egg-info"

# Thresholds (for non-strict mode)
MAX_SECURITY_ISSUES=10
MAX_STYLE_ISSUES=15
MAX_TYPE_ERRORS=8
MAX_TEST_FAILURES=0

# Custom tool configurations
declare -A TOOL_CONFIGS
TOOL_CONFIGS["bandit"]="--skip B101,B601"  # Skip assert and shell injection in examples
TOOL_CONFIGS["flake8"]="--max-line-length=88 --extend-ignore=E203,W503"
TOOL_CONFIGS["black"]="--line-length=88 --target-version=py38"
TOOL_CONFIGS["mypy"]="--python-version=3.8 --strict-optional"
TOOL_CONFIGS["isort"]="--profile=black --line-length=88"
TOOL_CONFIGS["pytest"]="--maxfail=5 --tb=short"

# Environment variables
export PYTHONPATH="${PYTHONPATH}:$(pwd)"
export MYPYPATH="${MYPYPATH}:$(pwd)"

# Logging configuration
LOG_LEVEL="INFO"  # DEBUG, INFO, WARNING, ERROR
LOG_FILE="$OUTPUT_DIR/tutorial.log"
LOG_TIMESTAMP=true